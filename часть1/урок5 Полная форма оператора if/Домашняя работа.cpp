//Как известно любому известному кинорежиссеру, на качество картины может повлиять большое количество факторов: сценарий, актерский состав, костюмы и окружение, монтаж, музыка, и многое другое. Но массовым любой фильм, конечно же, делают спецэффекты. Назовём фильм массовым, если за время его просмотра на экране происходит более 5 захватывающих дух спецэффектов.
//Напишите программу, которая по количеству спецэффектов в фильме определит, является ли он массовым или нет.
#include <iostream> 
using namespace std;
int main () { 
  int a;
  cin >> a;
  if (a <= 5)
    cout << "NO";
  else if (a > 5)
    cout << "YES";
}

//Дано число, превышающее 99. Определить, заканчивается ли это число цифрами 55.
#include <iostream> 
using namespace std;
int main () {
  int a;
  cin >> a;
  if ((a % 100) == 55)
  cout << "YES";
  else 
    cout << "NO";
}

//Даны три целых числа. Требуется определить, превосходит ли максимум этих чисел удвоенную сумму двух других или нет.
#include <iostream>
using namespace std;
int main() {
   int a, b, c;
   cin >> a >> b >> c;
   int mx = a;
   bool ans = (a >= (b + c) * 2);
   if (b > mx) {
       mx = b;
       ans = (b >= (a + c) * 2);
   }
   if (c > mx) {
       mx = c;
       ans = (c >= (a + b) * 2);
   }
   cout << (ans ? "YES" : "NO") << endl;
   return 0;
}

//Красная Шапочка часто навещает свою бабушку. Но она очень боится, что рано или поздно ее бабушку опять навестит волк. Поэтому она решила договориться с Лесничим об охране бабушки. Лесничий согласился охранять бабушку за 10 пирожков. Узнав об этом, Волк сказал Красной Шапочке, что ей совершенно незачем тратить пирожки на Лесничего. Вместо этого, Волк готов за половину пирожков, которые несет Красная Шапочка, не трогать бабушку.
//Сегодня мама испекла N пирожков, и попросила Красную Шапочку отнести их бабушке. Требуется определить, какое максимальное количество пирожков Красная Шапочка сможет донести до бабушки.
#include <iostream>
using namespace std;
int main() {
int n;
cin >> n;
if (n / 2 > 10)
    cout << n - 10;
else
    cout << n / 2;
}
